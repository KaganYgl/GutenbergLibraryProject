@model Tuple<List<Result>, Root>

<h2>Search Books</h2>

<form asp-action="Index" method="get">
    <label for="searchTerm">Search:</label>
    <input type="text" name="searchTerm" id="searchTerm" value="" />
    <button type="submit">Search</button>
</form>

<h2>Book List</h2>

<table>
    <thead>
        <tr>
            <th>ID</th>
            <th>Title</th>
            <th>Authors</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var book in Model.Item1)
        {
            <tr>
                <td>@book.id</td>
                <td>@book.title</td>
                <td>@string.Join(", ", book.authors.Select(a => a.name))</td>
                <td>
                    <form asp-action="AddToBookshelf" asp-controller="Bookshelf" method="post">
                        <input type="hidden" name="bookId" value="@book.id" />
                        <input type="hidden" name="bookTitle" value="@book.title" />
                        <input type="hidden" name="bookAuthor" value="@string.Join(", ", book.authors.Select(a => a.name))" />
                        <input type="hidden" name="readLink" value="@book.formats.texthtml" />
                        <button type="submit" class="btn btn-success">Add to Bookshelf</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<div style="margin-top: 20px;">
    @if (!string.IsNullOrEmpty(Model.Item2.previous))
    {
        <a asp-action="Index" asp-route-searchTerm="@ViewData["searchTerm"]" asp-route-pageUrl="@Model.Item2.previous" class="btn btn-primary">Previous Page</a>
    }

    @if (!string.IsNullOrEmpty(Model.Item2.next))
    {
        <a asp-action="Index" asp-route-searchTerm="@ViewData["searchTerm"]" asp-route-pageUrl="@Model.Item2.next" class="btn btn-primary">Next Page</a>
    }
</div>
